plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.fls.animecommunity'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// swagger springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// test
	testImplementation 'org.mockito:mockito-core:5.13.0'
	testImplementation 'org.mockito:mockito-junit-jupiter' // 테스트에 필요한 패키지!

	// jwt
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	// https://charactermail.tistory.com/491
}

tasks.named('test') {
	useJUnitPlatform()

}

// JVM 컴파일러 플래그 >> 메서드 파라미터의 이름 정보를 인식할 수 있도록...? 파라미터의 이름 정보 유지
tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}
